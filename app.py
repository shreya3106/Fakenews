# -*- coding: utf-8 -*-
"""Fake news detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13ePzHvB3n4hvh6ZV7-HjbIVUxVxdQ0nQ

"""

"""Web app"""
from flask import Flask,render_template, request
import pickle
import pickle
from nltk.corpus import stopwords
import re
from nltk.stem.porter import PorterStemmer
ps = PorterStemmer()

loaded_vectorizer= pickle.load(open('vectorizer.pkl', 'rb'))
loaded_model = pickle.load(open('finalised_model.pkl', 'rb'))  

app = Flask(__name__, template_folder="./frontend")
 
@app.route('/')
def home():
    return render_template('index.html')
 

def stemming(content):
    stemmed_content = re.sub('[^a-zA-Z]', ' ', content)
    stemmed_content = stemmed_content.lower()
    stemmed_content = stemmed_content.split()
    stemmed_content = [ps.stem(word) for word in stemmed_content if not word in stopwords.words('english')]
    stemmed_content = ' '.join(stemmed_content)
    return stemmed_content
    
@app.route('/prediction',methods=['GET', 'POST'])#same will be action
def prediction():
    if request.method == "POST":
        news = request.form['news']
        '''
        review = re.sub('[^a-zA-Z]', ' ', news)
        review = review.lower()
        review = review.split()
        review = [ps.stem(word) for word in review if not word in stopwords.words('english')]
        review = ' '.join(review)
        '''
        stemmed=stemming(news)
        stemmed_vect = loaded_vectorizer.transform([stemmed])#.toarray()
        predictions = 'FAKE' if loaded_model.predict(stemmed_vect) == 0 else 'REAL'

        print(predictions)
        return render_template("index.html", prediction_text="News Headline is -> {}".format(predictions))
    else: 
        return render_template("index.html")
if __name__ == '__main__':
    app.run(port=1234,debug=True)  
